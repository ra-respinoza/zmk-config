/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        clave_1: clave_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // No requiere parámetros
            bindings = <&kp KP_N7 &kp KP_N4 &kp KP_N1 &kp KP_N2 &kp KP_N3>;
        };

        clave_2: clave_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // No requiere parámetros
            bindings = <&kp T &kp DLLR &kp N8 &kp LS(L) &kp N0 &kp LS(O) &kp N5 &kp RBRC &kp N8 &kp LS(M)>;
        };

        clave_3: clave_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // No requiere parámetros
            bindings = <&kp R &kp E &kp KP_N1 &kp AT &kp KP_N8 &kp KP_N9 &kp KP_N1 &kp KP_N1>;
        };

        email_1: email_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // No requiere parámetros
            bindings = <&kp R &kp O &kp G &kp E &kp R &kp N0 &kp DOT &kp E &kp S &kp P &kp I &kp N &kp O &kp Z &kp A &kp N1 &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
        };

        email_2: email_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // No requiere parámetros
            bindings = <&kp R &kp O &kp G &kp E &kp R &kp DOT &kp E &kp S &kp P &kp I &kp N &kp O &kp Z &kp A &kp DOT &kp D &kp E &kp V &kp E &kp L &kp O &kp P &kp E &kp R &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp SQT   &kp COMMA  &kp DOT   &kp P  &kp Y    &kp F      &kp G      &kp C     &kp R  &kp L  &kp BSPC
&kp LCTRL  &kp A     &kp O      &kp E     &kp U  &kp I    &kp D      &kp H      &kp T     &kp N  &kp S  &kp RCTRL
&kp LSHFT  &kp SEMI  &kp Q      &kp J     &kp K  &kp X    &kp B      &kp M      &kp W     &kp V  &kp Z  &mt RSHFT FSLH
                                &kp LGUI  &mo 1  &mo 2    &kp SPACE  &lt 3 RET  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &kp C_PWR    &kp C_VOL_UP  &none       &kp UP    &none       &kp END   &kp BSPC
&trans     &none         &none           &kp LALT      &kp LGUI      &none        &kp C_VOL_DN  &kp LEFT    &kp DOWN  &kp RIGHT   &kp HOME  &kp DEL
&kp LSHFT  &bt BT_CLR    &bt BT_CLR_ALL  &none         &none         &none        &none         &kp C_PREV  &kp C_PP  &kp C_NEXT  &none     &mt RSHFT FSLH
                                         &kp LGUI      &mo 1         &mo 2        &kp SPACE     &lt 3 RET   &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &none   &trans  &none     &none     &none    &kp KP_DIVIDE    &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp MINUS    &kp BSPC
&kp LCTRL  &none   &none   &kp LALT  &kp LGUI  &none    &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS  &kp RCTRL
&kp LSHFT  &trans  &none   &none     &none     &none    &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT   &mt RSHFT FSLH
                           &kp LGUI  &mo 1     &mo 2    &kp SPACE        &lt 3 RET  &kp RALT
            >;
        };

        new_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &none  &none     &kp LPAR  &kp RPAR  &kp PIPE     &kp TILDE  &kp AT     &kp HASH  &kp DLLR  &kp PRCNT  &kp BSPC
&kp LCTRL  &none  &kp EXCL  &kp LBRC  &kp RBRC  &kp EQUAL    &clave_1   &clave_2   &clave_3  &none     &none      &kp RCTRL
&kp LSHFT  &none  &none     &kp LBKT  &kp RBKT  &kp AMPS     &email_1   &email_2   &none     &none     &none      &mt RSHFT FSLH
                            &kp LGUI  &mo 1     &mo 2        &kp SPACE  &lt 3 RET  &kp RALT
            >;
        };
    };
};
