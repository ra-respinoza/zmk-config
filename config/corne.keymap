/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp SQT  &kp COMMA &kp DOT &kp P &kp Y     &kp F &kp G  &kp C     &kp R   &kp L    &kp BSPC
   &kp LCTRL &kp A    &kp O     &kp E   &kp U &kp I     &kp D &kp H  &kp T     &kp N   &kp S    &kp RCTRL
   &kp LSHFT &kp SEMI &kp Q     &kp J   &kp K &kp X     &kp B &kp M  &kp W     &kp V   &kp Z    &kp FSLH
                  &kp LGUI &mo 1 &mo 2                  &kp SPACE  TAP_HOLD_LAYER(1, RET) &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &trans    &trans      &trans       &trans       &kp C_PWR         &trans     &trans       &kp UP      &trans    &kp END  &kp BSPC
   &trans     &trans    &trans      &kp LALT     &kp LGUI     &trans            &trans     &kp LEFT     &kp DOWN    &kp RIGHT &kp HOME &kp DEL
   &kp LSHFT  &trans    &trans      &trans       &trans       &trans            &kp K_PP   &kp K_PREV   &kp K_NEXT  &trans    &trans   &kp FSLH
                  &kp LGUI     &trans       &kp SPACE       &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB   &trans   &trans &trans    &trans     &trans      &kp KP_DIVIDE   &kp KP_N7 &kp KP_N8  &kp KP_N9 &kp KP_MINUS &kp BSPC
   &kp LCTRL &trans   &trans &kp LALT  &kp LGUI   &trans      &kp KP_MULTIPLY &kp KP_N4 &kp KP_N5  &kp KP_N6 &kp KP_PLUS  &kp RCTRL
   &kp LSHFT &trans   &trans &trans    &trans     &trans      &kp KP_N0       &kp KP_N1 &kp KP_N2  &kp KP_N3 &kp KP_DOT   &kp FSLH
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
                new_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp SQT  &kp COMMA &kp DOT &kp P &kp Y     &kp F &kp G  &kp C     &kp R   &kp L    &kp BSPC
   &kp LCTRL &kp A    &kp O     &kp E   &kp U &kp I     &kp D &kp H  &kp T     &kp N   &kp S    &kp RCTRL
   &kp LSHFT &kp SEMI &kp Q     &kp J   &kp K &kp X     &kp B &kp M  &kp W     &kp V   &kp Z    &kp FSLH
                  &kp LGUI &mo 1 &mo 1  &kp RET         &mo 3 &kp RALT
                        >;
                };
        };
};
